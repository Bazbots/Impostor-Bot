doing = ['Among Us on Discord! | Run $help or $commands for help!', "top.gg/{bot tag} | Run $help or $commands for help!", f"Among Us on Discord in " + str({len(client.guilds)}) + " servers!"]

async def change_status():
  await client.wait_until_ready()
  messages = cycle(doing)

  while not client.is_closed:
    current_status = next(messages)
    await client.change_presence(game=discord.Game(name=current_status))
    await asyncio.sleep(1)

client.loop.create_task(change_status()) 




if message.content.startswith('$help'):
        await message.channel.send('Need help? Join my support server! https://discord.gg/Sun4mtFjwE')
    if message.content.startswith("$invite"):
      await message.channel.send("Invite me here! https://discord.com/api/oauth2/authorize?client_id=759436027529265172&permissions=519232&redirect_uri=https%3A%2F%2Fdiscord.gg%2FnzsyDWg&scope=bot")
    if message.content.startswith("$about"):
      await message.channel.send("The Impostor is a bot made by Baz to play among us in discord! Show some love and join his server! https://discord.gg/5jKA9kj")
    if message.content.startswith("$join"):
      await message.channel.send("Choose a lobby:\nLobby `1`\nLobby `2`\nLobby `3`\nLobby `4`")
      await message.channel.send(discord.Object(id='805793981208199208'))
    if message.content.startswith("$modes"):
      await message.channel.send("Here are the modes we are planning to add:\nStandard - Basic Among Us\nCrazy Colours - User's Colours Change every now and then, depending on what the host has set it to\nTerminator - The Impostor can shapeshift,  use weapons, increase their speed and time freeze\nJester - One player MUST get voted out to win\nTroll - The troll must be killed by an Impstor\nAssassin - Each player has a certain target they must eliminate\n\nMore modes coming soon!")
    if message.content.startswith("$commands"):
      await message.channel.send("Current Commands:\nUse prefix `$`\nmodes\nhelp\nabout\ninvite\njoin\ncreate\ntier\nupgrade\nversion\nprefix")
    if message.content.startswith("$create"):
      await message.channel.send("Only users with Diamond Tier can create custom lobbies!")
    if message.content.startswith("$version") :
      await message.channel.send("Current Version:\n`1.0.3`")
    if message.content.startswith("$tier"):
      await message.channel.send("You are in `Basic` Tier! This is Tier `1` out of 3!(Basic, Diamond and Emerald)")
    if message.content.startswith("$upgrade"):
      await message.channel.send("The Tier system is coming soon!\nWhat you can do at `Basic` Tier:\nYou can join public and private games\nYou have access to certain modes (Standard and Crazy Colours)\nWhat you get when you reach `Diamond` Tier:\nAccess to most modes(Jester, Troll and Terminator)\nA 10% higher chance of being Impostor\nThe ability to create custom games\nWhat you get at `Emerald` Tier:\nAccess to all modes, even before they are released!\n25% higher chance of being Impostor\nAble to suggest modes for the bot!")



@client.command(invite)
async def invite():
  await client.say("https://discord.com/api/oauth2/authorize?client_id=759436027529265172&permissions=519232&redirect_uri=https%3A%2F%2Fdiscord.gg%2FnzsyDWg&scope=bot")


@client.command(pass_context=True)
async def help(ctx):
  author = ctx.message.author

  embed = discord.Embed(
    colour = discord.Colour.red()
  )

  embed.set_author(name="Help")
  embed.add_field(name="Need Help?\nJoin our Support Server!\nhttps://discord.gg/Sun4mtFjwE")
  embed.add_field(name="Use the prefix `$`")
  embed.add_field(name="invite", value="Sends an Invite Link for you to add the bot", inline=False)

  await client.send_message(author, embed=embed)



  client.mutes = document(client.db, "mutes")
    currentMutes await client.mutes.get_all()
    for mute in currentMutes:
      client.muted_users[mute["_id"]] = mute
    print(client.muted_users)
    
    
    
    
    
    
    class TopGG(commands.Cog):
    """Handles interactions with the top.gg API"""

    def __init__(self, bot):
        self.bot = bot
        self.token = 'dbl_token' # set this to your DBL token
        self.dblpy = dbl.DBLClient(self.bot, self.token, autopost=True) # Autopost will post your guild count every 30 minutes

    async def on_guild_post():
        print("Server count posted successfully")

def setup(bot):
    bot.add_cog(TopGG(bot))